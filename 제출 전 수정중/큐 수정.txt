#include <iostream>

using namespace std;

template <typename Tque>
class QUE
{
private:
	Tque * Que;
	int m_isize;
	int m_iFront;
	int m_iRear;
public:
	QUE(int s)
	{
		m_isize = s;
		Que = new Tque[m_isize]; 
		m_iFront = 0; 
		m_iRear = 0; 
	};
	
	void Enque(Tque Data) 
	{
		if (Full_Check())
		{
			Que[m_iFront] = Data;
			m_iFront++;
			cout << "큐 에 " << Data << " 가 추가 되었습니다." << endl;
			if (m_iFront + 1  == m_isize) 
				m_iFront = 0;
		}
		else
			cout << "더이상 들어갈 자리가 없습니다." << endl;
	};

	void Deque() 
	{
		if (m_iFront != m_iRear)
		{
			cout << "큐 에 " << Que[m_iRear] << " 가 삭제 되었습니다." << endl;
			m_iRear++;
			if (m_iRear + 1 == m_isize)
				m_iRear = 0;
		}
		else
			cout << "더이상 지울 공간이 없습니다." << endl;
	};
	bool Full_Check()
	{
		if ((m_iFront + 1) % m_isize != m_iFront)
			return true;
		else
			false;
	}
};

void main()
{
	QUE <double> Que(5);
	Que.Enque(4.5);//1
	Que.Enque(8.5);
	Que.Enque(6.5);
	Que.Enque(1.5);
	Que.Enque(3.5);//5
	Que.Enque(2.5);
	Que.Deque();
	Que.Deque();
	Que.Deque();
	Que.Deque();
	Que.Deque();
	Que.Deque();


} 